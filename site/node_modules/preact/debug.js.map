{"version":3,"sources":["debug/index.js"],"names":[],"mappings":";;AAAA;;AAEA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,aAA7B,EAA4C;AAC3C,KAAM,SAAS,QAAQ,QAAR,CAAf;AACA,KAAM,UAAU,OAAO,OAAvB;AACA,KAAM,iBAAiB,QAAQ,KAA/B;;AAEA,SAAQ,KAAR,GAAgB,UAAS,KAAT,EAAgB;AAAA,MACvB,QADuB,GACY,KADZ,CACvB,QADuB;AAAA,MACb,UADa,GACY,KADZ,CACb,UADa;AAAA,MACD,QADC,GACY,KADZ,CACD,QADC;;;AAG/B,MAAI,aAAa,KAAK,CAAtB,EAAyB;AACxB,WAAQ,KAAR,CAAc,+CAA6C,eAAe,KAAf,CAA3D;AACA;;AAED,MACC,cAAc,WAAW,GAAX,KAAmB,KAAK,CAAtC,IACA,OAAO,WAAW,GAAlB,KAA0B,UAD1B,IAEA,EAAE,cAAc,KAAhB,CAHD,CAGyB;AAHzB,IAIE;AACD,UAAM,IAAI,KAAJ,CACL,kEACS,OAAO,WAAW,GAD3B,mBAC6C,eAAe,KAAf,CAFxC,CAAN;AAIA;;AAED;AACC,OAAM,OAAO,EAAb;;AAEA,mBAAgB,QAAhB,EAA0B,UAAC,SAAD,EAAe;AACxC,QAAI,CAAC,SAAD,IAAc,UAAU,GAAV,IAAe,IAAjC,EAAuC;;AAEvC;AACA,QAAM,MAAM,UAAU,GAAV,GAAgB,EAA5B;;AAEA,QAAI,KAAK,cAAL,CAAoB,GAApB,CAAJ,EAA8B;AAC7B,aAAQ,KAAR,CACC,2DACA,gEADA,GAEA,uCAFA,GAGA,eAAe,KAAf,CAJD;;AAOA;AACA,YAAO,IAAP;AACA;;AAED,SAAK,GAAL,IAAY,IAAZ;AACA,IAnBD;AAoBA;;AAED,MAAI,cAAJ,EAAoB,eAAe,IAAf,CAAoB,IAApB,EAA0B,KAA1B;AACpB,EA5CD;;AA8CA,KAAI;AACH,MAAM,YAAY,OAAO,MAAzB;AACA,SAAO,MAAP,GAAgB,UAAU,KAAV,EAAiB,MAAjB,EAAyB,KAAzB,EAAgC;AAC/C,OAAI,UAAU,IAAV,IAAkB,SAAS,IAA/B,EAAqC;AACpC;AACA,YAAQ,KAAR,CAAc,+EACb,iBADa,GACO,eAAe,KAAf,CADrB;AAEA,IAJD,MAKK,IAAI,UAAU,KAAd,EAAqB;AACzB;AACA;AACA,YAAQ,KAAR,CACC,0EACA,gFADA,GAEA,qFAFA,GAGA,eAAe,KAAf,CAJD;AAMA;AACD,UAAO,UAAU,KAAV,EAAiB,MAAjB,EAAyB,KAAzB,CAAP;AACA,GAjBD;AAkBA,EApBD,CAqBA,OAAO,CAAP,EAAU,CAAE;;AAEZ,KAAM,kBAAkB,SAAlB,eAAkB,CAAC,QAAD,EAAW,OAAX,EAAuB;AAC9C,MAAI,CAAC,MAAM,OAAN,CAAc,QAAd,CAAL,EAA8B;AAC7B,cAAW,CAAC,QAAD,CAAX;AACA;AACD,SAAO,SAAS,IAAT,CAAc,UAAC,KAAD,EAAQ,CAAR,EAAc;AAClC,OAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACzB,WAAO,gBAAgB,KAAhB,EAAuB,OAAvB,CAAP;AACA;;AAED,UAAO,QAAQ,KAAR,EAAe,CAAf,CAAP;AACA,GANM,CAAP;AAOA,EAXD;;AAaA,KAAM,iBAAiB,SAAjB,cAAiB,OAAwC;AAAA,MAArC,QAAqC,QAArC,QAAqC;AAAA,MAA3B,UAA2B,QAA3B,UAA2B;AAAA,MAAf,QAAe,QAAf,QAAe;;AAC9D,MAAI,OAAO,QAAP,KAAkB,UAAtB,EAAkC;AACjC,cAAW,SAAS,IAAT,IAAiB,SAAS,WAArC;AACA;;AAED,MAAI,QAAQ,EAAZ;AACA,MAAI,UAAJ,EAAgB;AACf,QAAK,IAAI,IAAT,IAAiB,UAAjB,EAA6B;AAC5B,QAAI,WAAW,cAAX,CAA0B,IAA1B,KAAmC,SAAO,UAA9C,EAA0D;AACzD,SAAI,QAAQ,WAAW,IAAX,CAAZ;;AAEA;AACA,SAAI,OAAO,KAAP,KAAe,UAAnB,EAA+B;AAC9B,6BAAoB,MAAM,WAAN,IAAqB,MAAM,IAA/C;AACA;AACD,SAAI,OAAO,KAAP,MAAkB,KAAlB,IAA2B,CAAC,MAAM,QAAtC,EAAgD;AAC/C,cAAQ,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,KAA/B,CAAR;AACA,MAFD,MAGK;AACJ,cAAQ,QAAQ,EAAhB;AACA;;AAED,oBAAa,IAAb,SAAqB,KAAK,SAAL,CAAe,KAAf,CAArB;AACA;AACD;AACD;;AAED,eAAW,QAAX,GAAsB,KAAtB,IAA8B,YAAY,SAAS,MAArB,GAA+B,UAAQ,QAAR,GAAiB,GAAhD,GAAuD,KAArF;AACA,EA5BD;;AA8BA,SAAQ,iBAAR;AACA","file":"debug.js","sourcesContent":["/* eslint-disable no-console */\n\nif (process.env.NODE_ENV === 'development') {\n\tconst preact = require('preact');\n\tconst options = preact.options;\n\tconst oldVnodeOption = options.vnode;\n\n\toptions.vnode = function(vnode) {\n\t\tconst { nodeName, attributes, children } = vnode;\n\n\t\tif (nodeName === void 0) {\n\t\t\tconsole.error('Undefined component passed to preact.h()\\n'+serializeVNode(vnode));\n\t\t}\n\n\t\tif (\n\t\t\tattributes && attributes.ref !== void 0 &&\n\t\t\ttypeof attributes.ref !== 'function' &&\n\t\t\t!('$$typeof' in vnode)  // allow string refs when preact-compat is installed\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component's \"ref\" property should be a function,` +\n\t\t\t\t` but [${typeof attributes.ref}] passed\\n` + serializeVNode(vnode)\n\t\t\t);\n\t\t}\n\n\t\t{\n\t\t\tconst keys = {};\n\n\t\t\tinspectChildren(children, (deepChild) => {\n\t\t\t\tif (!deepChild || deepChild.key==null) return;\n\n\t\t\t\t// In Preact, all keys are stored as object values, i.e. being strings\n\t\t\t\tconst key = deepChild.key + '';\n\n\t\t\t\tif (keys.hasOwnProperty(key)) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Following component has two or more children with the ' +\n\t\t\t\t\t\t'same \"key\" attribute. This may cause glitches and misbehavior ' +\n\t\t\t\t\t\t'in rendering process. Component: \\n\\n' +\n\t\t\t\t\t\tserializeVNode(vnode)\n\t\t\t\t\t);\n\n\t\t\t\t\t// Return early to not spam the console\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tkeys[key] = true;\n\t\t\t});\n\t\t}\n\n\t\tif (oldVnodeOption) oldVnodeOption.call(this, vnode);\n\t};\n\n\ttry {\n\t\tconst oldRender = preact.render;\n\t\tpreact.render = function (vnode, parent, merge) {\n\t\t\tif (parent == null && merge == null) {\n\t\t\t\t// render(vnode, parent, merge) can't have both parent and merge be undefined\n\t\t\t\tconsole.error('The \"containerNode\" or \"replaceNode\" is not defined in the render method. ' +\n\t\t\t\t\t'Component: \\n\\n' + serializeVNode(vnode));\n\t\t\t}\n\t\t\telse if (parent == merge) {\n\t\t\t\t// if parent == merge, it doesn't reason well and would cause trouble when preact\n\t\t\t\t// tries to update or replace that 'replaceNode' element\n\t\t\t\tconsole.error(\n\t\t\t\t\t'The \"containerNode\" and \"replaceNode\" are the same in render method, ' +\n\t\t\t\t\t'when the \"replaceNode\" DOM node is expected to be a child of \"containerNode\". ' +\n\t\t\t\t\t'docs-ref: https://preactjs.com/guide/api-reference#-preact-render-. Component: \\n\\n' +\n\t\t\t\t\tserializeVNode(vnode)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn oldRender(vnode, parent, merge);\n\t\t};\n\t}\n\tcatch (e) {}\n\n\tconst inspectChildren = (children, inspect) => {\n\t\tif (!Array.isArray(children)) {\n\t\t\tchildren = [children];\n\t\t}\n\t\treturn children.some((child, i) => {\n\t\t\tif (Array.isArray(child)) {\n\t\t\t\treturn inspectChildren(child, inspect);\n\t\t\t}\n\n\t\t\treturn inspect(child, i);\n\t\t});\n\t};\n\n\tconst serializeVNode = ({ nodeName, attributes, children }) => {\n\t\tif (typeof nodeName==='function') {\n\t\t\tnodeName = nodeName.name || nodeName.displayName;\n\t\t}\n\n\t\tlet props = '';\n\t\tif (attributes) {\n\t\t\tfor (let attr in attributes) {\n\t\t\t\tif (attributes.hasOwnProperty(attr) && attr!=='children') {\n\t\t\t\t\tlet value = attributes[attr];\n\n\t\t\t\t\t// If it is an object but doesn't have toString(), use Object.toString\n\t\t\t\t\tif (typeof value==='function') {\n\t\t\t\t\t\tvalue = `function ${value.displayName || value.name}() {}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (Object(value) === value && !value.toString) {\n\t\t\t\t\t\tvalue = Object.prototype.toString.call(value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = value + '';\n\t\t\t\t\t}\n\n\t\t\t\t\tprops += ` ${attr}=${JSON.stringify(value)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn `<${nodeName}${props}${children && children.length ? ('>..</'+nodeName+'>') : ' />'}`;\n\t};\n\n\trequire('preact/devtools');\n}\n"]}