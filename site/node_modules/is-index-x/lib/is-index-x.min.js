!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).returnExports=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n||e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){/**
 * @file Determine whether the passed value is a zero based index.
 * @version 1.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-index-x
 */
"use strict";var safeToString=_dereq_("to-string-symbols-supported-x"),toInteger=_dereq_("to-integer-x").toInteger2018,toNumber=_dereq_("to-number-x").toNumber2018,mathClamp=_dereq_("math-clamp-x"),MAX_SAFE_INTEGER=_dereq_("max-safe-integer"),reIsUint=/^(?:0|[1-9]\d*)$/,rxTest=reIsUint.test;module.exports=function isIndex(value){var string=safeToString(value);if(!1===rxTest.call(reIsUint,string))return!1;var number=toNumber(string);return arguments.length>1?number<mathClamp(toInteger(arguments[1]),MAX_SAFE_INTEGER):number<MAX_SAFE_INTEGER}},{"math-clamp-x":16,"max-safe-integer":18,"to-integer-x":26,"to-number-x":27,"to-string-symbols-supported-x":29}],2:[function(_dereq_,module,exports){/**
 * @file Invokes function, returning an object of the results.
 * @version 1.1.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module attempt-x
 */
"use strict";var getArgs=function _getArgs(args){var length=args.length>>>0,array=[],argLength=length-1;if(argLength<1)return array;array.length=argLength;for(var index=1;index<length;index+=1)array[index-1]=args[index];return array};module.exports=function attempt(fn){try{return{threw:!1,value:fn.apply(this,getArgs(arguments))}}catch(e){return{threw:!0,value:e}}}},{}],3:[function(_dereq_,module,exports){/**
 * @file Constructors cached from literals.
 * @version 1.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module cached-constructors-x
 */
"use strict";module.exports={Array:[].constructor,Boolean:(!0).constructor,Number:(0).constructor,Object:{}.constructor,RegExp:/(?:)/.constructor,String:"".constructor}},{}],4:[function(_dereq_,module,exports){/**
 * @file Tests if ES6 Symbol is supported.
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module has-symbol-support-x
 */
"use strict";module.exports="function"==typeof Symbol&&"symbol"==typeof Symbol("")},{}],5:[function(_dereq_,module,exports){/**
 * @file Tests if ES6 @@toStringTag is supported.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-@@tostringtag|26.3.1 @@toStringTag}
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module has-to-string-tag-x
 */
"use strict";module.exports=_dereq_("has-symbol-support-x")&&"symbol"==typeof Symbol.toStringTag},{"has-symbol-support-x":4}],6:[function(_dereq_,module,exports){/**
 * @file The constant value Infinity.
 * @version 1.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module infinity-x
 */
"use strict";module.exports=1/0},{}],7:[function(_dereq_,module,exports){"use strict";var getDay=Date.prototype.getDay,tryDateObject=function tryDateObject(value){try{return getDay.call(value),!0}catch(e){return!1}},toStr=Object.prototype.toString,hasToStringTag="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;module.exports=function isDateObject(value){return"object"==typeof value&&null!==value&&(hasToStringTag?tryDateObject(value):"[object Date]"===toStr.call(value))}},{}],8:[function(_dereq_,module,exports){/**
 * @file Test if a given value is falsey.
 * @version 1.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-falsey-x
 */
"use strict";var toBoolean=_dereq_("to-boolean-x");module.exports=function isFalsey(value){return!1===toBoolean(value)}},{"to-boolean-x":25}],9:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for Number.isFinite.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite|20.1.2.2 Number.isFinite ( number )}
 * @version 3.0.2
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-finite-x
 */
"use strict";var numberIsNaN=_dereq_("is-nan-x"),INFINITY=_dereq_("infinity-x");module.exports=function isFinite(number){return"number"==typeof number&&!1===numberIsNaN(number)&&number!==INFINITY&&number!==-INFINITY}},{"infinity-x":6,"is-nan-x":11}],10:[function(_dereq_,module,exports){/**
 * @file Determine whether a given value is a function object.
 * @version 3.3.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-function-x
 */
"use strict";var attempt=_dereq_("attempt-x"),fToString=Function.prototype.toString,toBoolean=_dereq_("to-boolean-x"),isFalsey=_dereq_("is-falsey-x"),toStringTag=_dereq_("to-string-tag-x"),hasToStringTag=_dereq_("has-to-string-tag-x"),isPrimitive=_dereq_("is-primitive"),normalise=_dereq_("normalize-space-x").normalizeSpace,deComment=_dereq_("replace-comments-x"),ctrRx=/^class /,test=ctrRx.test,hasNativeClass=!1===attempt(function(){return Function('"use strict"; return class My {};')()}).threw,testClassstring=function _testClassstring(value){return test.call(ctrRx,normalise(deComment(fToString.call(value)," ")))},isES6ClassFn=function isES6ClassFunc(value){var result=attempt(testClassstring,value);return!1===result.threw&&result.value},tryFuncToString=function funcToString(value,allowClass){return(!hasNativeClass||!1!==allowClass||!isES6ClassFn(value))&&!1===attempt.call(value,fToString).threw};module.exports=function isFunction(value){if(isPrimitive(value))return!1;if(hasToStringTag)return tryFuncToString(value,toBoolean(arguments[1]));if(hasNativeClass&&isFalsey(arguments[1])&&isES6ClassFn(value))return!1;var strTag=toStringTag(value);return"[object Function]"===strTag||"[object GeneratorFunction]"===strTag||"[object AsyncFunction]"===strTag}},{"attempt-x":2,"has-to-string-tag-x":5,"is-falsey-x":8,"is-primitive":13,"normalize-space-x":20,"replace-comments-x":22,"to-boolean-x":25,"to-string-tag-x":30}],11:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for Number.isNaN - the global isNaN returns false positives.
 * @version 1.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-nan-x
 */
"use strict";module.exports=function isNaN(value){return value!==value}},{}],12:[function(_dereq_,module,exports){/**
 * @file Checks if `value` is `null` or `undefined`.
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-nil-x
 */
"use strict";var isUndefined=_dereq_("validate.io-undefined"),isNull=_dereq_("lodash.isnull");module.exports=function isNil(value){return isNull(value)||isUndefined(value)}},{"lodash.isnull":15,"validate.io-undefined":35}],13:[function(_dereq_,module,exports){"use strict";module.exports=function isPrimitive(value){return null==value||"function"!=typeof value&&"object"!=typeof value}},{}],14:[function(_dereq_,module,exports){"use strict";var toStr=Object.prototype.toString;if("function"==typeof Symbol&&"symbol"==typeof Symbol()){var symToStr=Symbol.prototype.toString,symStringRegex=/^Symbol\(.*\)$/,isSymbolObject=function isSymbolObject(value){return"symbol"==typeof value.valueOf()&&symStringRegex.test(symToStr.call(value))};module.exports=function isSymbol(value){if("symbol"==typeof value)return!0;if("[object Symbol]"!==toStr.call(value))return!1;try{return isSymbolObject(value)}catch(e){return!1}}}else module.exports=function isSymbol(value){return!1}},{}],15:[function(_dereq_,module,exports){module.exports=function isNull(value){return null===value}},{}],16:[function(_dereq_,module,exports){/**
 * @file Clamp a number to limits.
 * @version 1.2.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module math-clamp-x
 */
"use strict";var toNumber=_dereq_("to-number-x").toNumber2018;module.exports=function clamp(value){var number=toNumber(value),argsLength=arguments.length;if(argsLength<2)return number;var max,min=toNumber(arguments[1]);if(argsLength<3?(max=min,min=0):max=toNumber(arguments[2]),min>max)throw new RangeError('"min" must be less than "max"');return number<min?min:number>max?max:number}},{"to-number-x":27}],17:[function(_dereq_,module,exports){/**
 * @file Shim for Math.sign.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-math.sign|20.2.2.29 Math.sign(x)}
 * @version 3.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module math-sign-x
 */
"use strict";var libToNumber=_dereq_("to-number-x"),toNumber2016=libToNumber.toNumber2016,toNumber2018=libToNumber.toNumber2018,numberIsNaN=_dereq_("is-nan-x"),$sign2018=function sign2018(x){var n=toNumber2018(x);return 0===n||numberIsNaN(n)?n:n>0?1:-1};module.exports={sign:$sign2018,sign2016:function sign2016(x){var n=toNumber2016(x);return 0===n||numberIsNaN(n)?n:n>0?1:-1},sign2018:$sign2018}},{"is-nan-x":11,"to-number-x":27}],18:[function(_dereq_,module,exports){"use strict";module.exports=9007199254740991},{}],19:[function(_dereq_,module,exports){/**
 * @file The constant NaN derived mathematically by 0 / 0.
 * @version 1.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module nan-x
 */
"use strict";module.exports=NaN},{}],20:[function(_dereq_,module,exports){/**
 * @file Trims and replaces sequences of whitespace characters by a single space.
 * @version 3.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module normalize-space-x
 */
"use strict";var libTrim=_dereq_("trim-x"),trim2016=libTrim.trim2016,trim2018=libTrim.trim2018,Rx=_dereq_("cached-constructors-x").RegExp,libWhiteSpace=_dereq_("white-space-x"),reNormalize2016=new Rx("["+libWhiteSpace.string2016+"]+","g"),reNormalize2018=new Rx("["+libWhiteSpace.string2018+"]+","g"),replace="".replace,$normalizeSpace2018=function normalizeSpace2018(string){return replace.call(trim2018(string),reNormalize2018," ")};module.exports={normalizeSpace:$normalizeSpace2018,normalizeSpace2016:function normalizeSpace2016(string){return replace.call(trim2016(string),reNormalize2016," ")},normalizeSpace2018:$normalizeSpace2018}},{"cached-constructors-x":3,"trim-x":34,"white-space-x":36}],21:[function(_dereq_,module,exports){/**
 * @file Parses a string argument and returns an integer of the specified radix.
 * @version 2.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module parse-int-x
 */
"use strict";var nativeParseInt=parseInt,NAN=_dereq_("nan-x"),toStr=_dereq_("to-string-x"),trimLeft2016=_dereq_("trim-left-x").trimLeft2016,trimLeft2018=_dereq_("trim-left-x").trimLeft2018,chachedCtrs=_dereq_("cached-constructors-x"),castNumber=chachedCtrs.Number,charAt=chachedCtrs.String.prototype.charAt,hexRegex=/^[-+]?0[xX]/,test=hexRegex.test,$parseInt2018=function parseInt2018(string,radix){var str=trimLeft2018(toStr(string));return"\u180e"===charAt.call(str,0)?NAN:nativeParseInt(str,castNumber(radix)||(test.call(hexRegex,str)?16:10))};module.exports={parseInt:$parseInt2018,parseInt2016:function parseInt2016(string,radix){var str=trimLeft2016(toStr(string));return nativeParseInt(str,castNumber(radix)||(test.call(hexRegex,str)?16:10))},parseInt2018:$parseInt2018}},{"cached-constructors-x":3,"nan-x":19,"to-string-x":31,"trim-left-x":32}],22:[function(_dereq_,module,exports){/**
 * @file Replace the comments in a string.
 * @version 2.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module replace-comments-x
 */
"use strict";var toStr=_dereq_("to-string-x"),requireCoercibleToString=_dereq_("require-coercible-to-string-x"),STRIP_COMMENTS=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,replace="".replace;module.exports=function replaceComments(string){return replace.call(requireCoercibleToString(string),STRIP_COMMENTS,arguments.length>1?toStr(arguments[1]):"")}},{"require-coercible-to-string-x":23,"to-string-x":31}],23:[function(_dereq_,module,exports){/**
 * @file Requires an argument is corecible then converts using ToString.
 * @version 1.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module require-coercible-to-string-x
 */
"use strict";var requireObjectCoercible=_dereq_("require-object-coercible-x"),toStr=_dereq_("to-string-x");module.exports=function requireCoercibleToString(value){return toStr(requireObjectCoercible(value))}},{"require-object-coercible-x":24,"to-string-x":31}],24:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for RequireObjectCoercible.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-requireobjectcoercible|7.2.1 RequireObjectCoercible ( argument )}
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module require-object-coercible-x
 */
"use strict";var isNil=_dereq_("is-nil-x");module.exports=function RequireObjectCoercible(value){if(isNil(value))throw new TypeError("Cannot call method on "+value);return value}},{"is-nil-x":12}],25:[function(_dereq_,module,exports){/**
 * @file Converts argument to a value of type Boolean.
 * @version 1.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-boolean-x
 */
"use strict";module.exports=function toBoolean(value){return!!value}},{}],26:[function(_dereq_,module,exports){/**
 * @file ToInteger converts 'argument' to an integral numeric value.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger|7.1.4 ToInteger ( argument )}
 * @version 3.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-integer-x
 */
"use strict";var libToNumber=_dereq_("to-number-x"),toNumber2016=libToNumber.toNumber2016,toNumber2018=libToNumber.toNumber2018,numberIsNaN=_dereq_("is-nan-x"),numberIsFinite=_dereq_("is-finite-x"),libMathSign=_dereq_("math-sign-x"),mathSign2016=libMathSign.sign2016,mathSign2018=libMathSign.sign2018,mathFloor=Math.floor,mathAbs=Math.abs,$toInteger2018=function toInteger2018(value){var number=toNumber2018(value);return numberIsNaN(number)?0:0===number||!1===numberIsFinite(number)?number:mathSign2018(number)*mathFloor(mathAbs(number))};module.exports={toInteger:$toInteger2018,toInteger2016:function toInteger2016(value){var number=toNumber2016(value);return numberIsNaN(number)?0:0===number||!1===numberIsFinite(number)?number:mathSign2016(number)*mathFloor(mathAbs(number))},toInteger2018:$toInteger2018}},{"is-finite-x":9,"is-nan-x":11,"math-sign-x":17,"to-number-x":27}],27:[function(_dereq_,module,exports){/**
 * @file Converts argument to a value of type Number.
 * @version 2.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-number-x
 */
"use strict";var cachedCtrs=_dereq_("cached-constructors-x"),castNumber=cachedCtrs.Number,Rx=cachedCtrs.RegExp,toPrimitive=_dereq_("to-primitive-x"),libTrim=_dereq_("trim-x"),trim2016=libTrim.trim2016,trim2018=libTrim.trim2018,libParseInt=_dereq_("parse-int-x"),$parseInt2016=libParseInt.parseInt2016,$parseInt2018=libParseInt.parseInt2018,pStrSlice=cachedCtrs.String.prototype.slice,NAN=_dereq_("nan-x"),binaryRegex=/^0b[01]+$/i,test=binaryRegex.test,isBinary=function _isBinary(value){return test.call(binaryRegex,value)},octalRegex=/^0o[0-7]+$/i,isOctal=function _isOctal(value){return test.call(octalRegex,value)},nonWSregex2016=new Rx("[\x85\u200b\ufffe]","g"),hasNonWS2016=function _hasNonWS(value){return test.call(nonWSregex2016,value)},nonWSregex2018=new Rx("[\x85\u180e\u200b\ufffe]","g"),hasNonWS2018=function _hasNonWS(value){return test.call(nonWSregex2018,value)},invalidHexLiteral=/^[-+]0x[0-9a-f]+$/i,isInvalidHexLiteral=function _isInvalidHexLiteral(value){return test.call(invalidHexLiteral,value)},$toNumber2018=function toNumber2018(argument){var value=toPrimitive(argument,Number);if("symbol"==typeof value)throw new TypeError("Cannot convert a Symbol value to a number");if("string"==typeof value){if(isBinary(value))return toNumber2018($parseInt2018(pStrSlice.call(value,2),2));if(isOctal(value))return toNumber2018($parseInt2018(pStrSlice.call(value,2),8));if(hasNonWS2018(value)||isInvalidHexLiteral(value))return NAN;var trimmed=trim2018(value);if(trimmed!==value)return toNumber2018(trimmed)}return castNumber(value)};module.exports={toNumber:$toNumber2018,toNumber2016:function toNumber2016(argument){var value=toPrimitive(argument,Number);if("symbol"==typeof value)throw new TypeError("Cannot convert a Symbol value to a number");if("string"==typeof value){if(isBinary(value))return toNumber2016($parseInt2016(pStrSlice.call(value,2),2));if(isOctal(value))return toNumber2016($parseInt2016(pStrSlice.call(value,2),8));if(hasNonWS2016(value)||isInvalidHexLiteral(value))return NAN;var trimmed=trim2016(value);if(trimmed!==value)return toNumber2016(trimmed)}return castNumber(value)},toNumber2018:$toNumber2018}},{"cached-constructors-x":3,"nan-x":19,"parse-int-x":21,"to-primitive-x":28,"trim-x":34}],28:[function(_dereq_,module,exports){/**
 * @file Converts a JavaScript object to a primitive value.
 * @version 1.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-primitive-x
 */
"use strict";var hasSymbols=_dereq_("has-symbol-support-x"),isPrimitive=_dereq_("is-primitive"),isDate=_dereq_("is-date-object"),isSymbol=_dereq_("is-symbol"),isFunction=_dereq_("is-function-x"),requireObjectCoercible=_dereq_("require-object-coercible-x"),isNil=_dereq_("is-nil-x"),isUndefined=_dereq_("validate.io-undefined"),symToPrimitive=hasSymbols&&Symbol.toPrimitive,symValueOf=hasSymbols&&Symbol.prototype.valueOf,toStringOrder=["toString","valueOf"],toNumberOrder=["valueOf","toString"],ordinaryToPrimitive=function _ordinaryToPrimitive(O,hint){if(requireObjectCoercible(O),"string"!=typeof hint||"number"!==hint&&"string"!==hint)throw new TypeError('hint must be "string" or "number"');for(var method,result,methodNames="string"===hint?toStringOrder:toNumberOrder,i=0;i<2;i+=1)if(method=O[methodNames[i]],isFunction(method)&&(result=method.call(O),isPrimitive(result)))return result;throw new TypeError("No default value")},getMethod=function _getMethod(O,P){var func=O[P];if(!1===isNil(func)){if(!1===isFunction(func))throw new TypeError(func+" returned for property "+P+" of object "+O+" is not a function");return func}};module.exports=function toPrimitive(input,preferredType){if(isPrimitive(input))return input;var hint="default";arguments.length>1&&(preferredType===String?hint="string":preferredType===Number&&(hint="number"));var exoticToPrim;if(hasSymbols&&(symToPrimitive?exoticToPrim=getMethod(input,symToPrimitive):isSymbol(input)&&(exoticToPrim=symValueOf)),!1===isUndefined(exoticToPrim)){var result=exoticToPrim.call(input,hint);if(isPrimitive(result))return result;throw new TypeError("unable to convert exotic object to primitive")}return"default"===hint&&(isDate(input)||isSymbol(input))&&(hint="string"),ordinaryToPrimitive(input,"default"===hint?"number":hint)}},{"has-symbol-support-x":4,"is-date-object":7,"is-function-x":10,"is-nil-x":12,"is-primitive":13,"is-symbol":14,"require-object-coercible-x":24,"validate.io-undefined":35}],29:[function(_dereq_,module,exports){/**
 * @file ES6 abstract ToString with Symbol conversion support.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tostring|7.1.12 ToString ( argument )}
 * @version 1.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-string-symbols-supported-x
 */
"use strict";var castString=_dereq_("cached-constructors-x").String,pToString=_dereq_("has-symbol-support-x")&&Symbol.prototype.toString,isSymbol="function"==typeof pToString&&_dereq_("is-symbol");module.exports=function toStringSymbolsSupported(value){return isSymbol&&isSymbol(value)?pToString.call(value):castString(value)}},{"cached-constructors-x":3,"has-symbol-support-x":4,"is-symbol":14}],30:[function(_dereq_,module,exports){/**
 * @file Get an object's ES6 @@toStringTag.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring|19.1.3.6 Object.prototype.toString ( )}
 * @version 1.4.2
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-string-tag-x
 */
"use strict";var isNull=_dereq_("lodash.isnull"),isUndefined=_dereq_("validate.io-undefined"),toStr={}.toString;module.exports=function toStringTag(value){return isNull(value)?"[object Null]":isUndefined(value)?"[object Undefined]":toStr.call(value)}},{"lodash.isnull":15,"validate.io-undefined":35}],31:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for ToString.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tostring|7.1.12 ToString ( argument )}
 * @version 1.4.2
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-string-x
 */
"use strict";var castString="".constructor,isSymbol=_dereq_("is-symbol");module.exports=function ToString(value){if(isSymbol(value))throw new TypeError("Cannot convert a Symbol value to a string");return castString(value)}},{"is-symbol":14}],32:[function(_dereq_,module,exports){/**
 * @file This method removes whitespace from the left end of a string.
 * @version 3.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module trim-left-x
 */
"use strict";var requireCoercibleToString=_dereq_("require-coercible-to-string-x"),Rx=_dereq_("cached-constructors-x").RegExp,reLeft2016=new Rx("^["+_dereq_("white-space-x").string2016+"]+"),reLeft2018=new Rx("^["+_dereq_("white-space-x").string2018+"]+"),replace="".replace,$trimLeft2018=function trimLeft2018(string){return replace.call(requireCoercibleToString(string),reLeft2018,"")};module.exports={trimLeft:$trimLeft2018,trimLeft2016:function trimLeft2016(string){return replace.call(requireCoercibleToString(string),reLeft2016,"")},trimLeft2018:$trimLeft2018}},{"cached-constructors-x":3,"require-coercible-to-string-x":23,"white-space-x":36}],33:[function(_dereq_,module,exports){/**
 * @file This method removes whitespace from the right end of a string.
 * @version 3.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module trim-right-x
 */
"use strict";var requireCoercibleToString=_dereq_("require-coercible-to-string-x"),Rx=_dereq_("cached-constructors-x").RegExp,reRight2016=new Rx("["+_dereq_("white-space-x").string2016+"]+$"),reRight2018=new Rx("["+_dereq_("white-space-x").string2018+"]+$"),replace="".replace,$trimRight2018=function trimRight2018(string){return replace.call(requireCoercibleToString(string),reRight2018,"")};module.exports={trimRight:$trimRight2018,trimRight2016:function trimRight2016(string){return replace.call(requireCoercibleToString(string),reRight2016,"")},trimRight2018:$trimRight2018}},{"cached-constructors-x":3,"require-coercible-to-string-x":23,"white-space-x":36}],34:[function(_dereq_,module,exports){/**
 * @file This method removes whitespace from the left and right end of a string.
 * @version 3.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module trim-x
 */
"use strict";var libTrimLeft=_dereq_("trim-left-x"),trimLeft2016=libTrimLeft.trimLeft2016,trimLeft2018=libTrimLeft.trimLeft2018,libTrimRight=_dereq_("trim-right-x"),trimRight2016=libTrimRight.trimRight2016,trimRight2018=libTrimRight.trimRight2016,$trim2018=function trim2018(string){return trimLeft2018(trimRight2018(string))};module.exports={trim:$trim2018,trim2016:function trim2016(string){return trimLeft2016(trimRight2016(string))},trim2018:$trim2018}},{"trim-left-x":32,"trim-right-x":33}],35:[function(_dereq_,module,exports){"use strict";module.exports=function isUndefined(value){return void 0===value}},{}],36:[function(_dereq_,module,exports){/**
 * @file List of ECMAScript white space characters.
 * @version 3.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module white-space-x
 */
"use strict";for(var list=[{code:9,description:"Tab",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\t"},{code:10,description:"Line Feed",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\n"},{code:11,description:"Vertical Tab",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\x0B"},{code:12,description:"Form Feed",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\f"},{code:13,description:"Carriage Return",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\r"},{code:32,description:"Space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:" "},{code:160,description:"No-break space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\xa0"},{code:5760,description:"Ogham space mark",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u1680"},{code:6158,description:"Mongolian vowel separator",es5:!0,es2015:!0,es2016:!0,es2017:!1,es2018:!1,string:"\u180e"},{code:8192,description:"En quad",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2000"},{code:8193,description:"Em quad",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2001"},{code:8194,description:"En space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2002"},{code:8195,description:"Em space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2003"},{code:8196,description:"Three-per-em space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2004"},{code:8197,description:"Four-per-em space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2005"},{code:8198,description:"Six-per-em space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2006"},{code:8199,description:"Figure space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2007"},{code:8200,description:"Punctuation space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2008"},{code:8201,description:"Thin space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2009"},{code:8202,description:"Hair space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u200a"},{code:8232,description:"Line separator",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2028"},{code:8233,description:"Paragraph separator",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u2029"},{code:8239,description:"Narrow no-break space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u202f"},{code:8287,description:"Medium mathematical space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u205f"},{code:12288,description:"Ideographic space",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\u3000"},{code:65279,description:"Byte Order Mark",es5:!0,es2015:!0,es2016:!0,es2017:!0,es2018:!0,string:"\ufeff"}],stringES2016="",stringES2018="",length=list.length,i=0;i<length;i+=1)list[i].es2016&&(stringES2016+=list[i].string),list[i].es2018&&(stringES2018+=list[i].string);module.exports={list:list,string:stringES2018,string5:stringES2016,string2015:stringES2016,string2016:stringES2016,string2017:stringES2018,string2018:stringES2018}},{}]},{},[1])(1)});